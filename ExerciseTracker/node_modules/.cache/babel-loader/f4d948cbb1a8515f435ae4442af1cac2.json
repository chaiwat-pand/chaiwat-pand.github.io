{"ast":null,"code":"var _jsxFileName = \"/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Activity/Activity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Activity.css';\nimport Timer from '../Timer/Timer';\nimport axios from 'axios';\nimport { faRandom } from '@fortawesome/free-solid-svg-icons'; // import { application } from 'express'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Activity() {\n  _s();\n\n  const ACITIVITIES_TYPE = [{\n    label: 'Running',\n    actSrc: '../../Images/Activity-Pictures/running.png'\n  }, {\n    label: 'Badminton',\n    actSrc: '../../Images/Activity-Pictures/badminton.png'\n  }, {\n    label: 'Bike',\n    actSrc: '../../Images/Activity-Pictures/bike.png'\n  }, {\n    label: 'Jumping',\n    actSrc: '../../Images/Activity-Pictures/jump.png'\n  }, {\n    label: 'Swimming',\n    actSrc: '../../Images/Activity-Pictures/swimming.png'\n  }, {\n    label: 'Walking',\n    actSrc: '../../Images/Activity-Pictures/walk.png'\n  }, {\n    label: 'Weight',\n    actSrc: '../../Images/Activity-Pictures/Weight.png'\n  }];\n  const [slideAct, setSlideAct] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [form, setForm] = useState({\n    activityName: '',\n    timestamp: '',\n    hr: 0,\n    mn: 0,\n    calories: 0,\n    description: ''\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      type\n    } = event.target;\n    setForm(prevFormData => ({ ...prevFormData,\n      [name]: value\n    }));\n  }\n\n  function next() {\n    if (slideAct === ACITIVITIES_TYPE.length - 1) {\n      setSlideAct(0);\n    } else {\n      const nextSide = slideAct + 1;\n      setSlideAct(nextSide);\n    }\n  }\n\n  function previous() {\n    if (slideAct === 0) {\n      setSlideAct(ACITIVITIES_TYPE.length - 1);\n    } else {\n      const nextSide = slideAct - 1;\n      setSlideAct(nextSide);\n    }\n  }\n\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  function Finish() {\n    const hrTimer = Math.floor(seconds / 3600);\n    const mnTimer = Math.floor(seconds / 60) % 60;\n    const todayDate = new Date();\n\n    const convertdate = date => {\n      const arrayDate = todayDate.toLocaleDateString().split('/');\n      const sufferDate = [arrayDate[2], (arrayDate[0] < 10 ? '0' : '') + arrayDate[0], (arrayDate[1] < 10 ? '0' : '') + arrayDate[1]];\n      return sufferDate.join('-');\n    };\n\n    const newDate = convertdate(todayDate);\n    console.log(newDate);\n    setForm({ ...form,\n      activityName: ACITIVITIES_TYPE[slideAct].label,\n      timestamp: newDate\n    });\n    setSeconds(0);\n    setIsActive(false);\n  }\n\n  const calculateDuration = `{form.hr} + {form.mn}`;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(form);\n  }\n\n  function record(event) {\n    axios({\n      method: 'POST',\n      data: {\n        activityName: form.activityName,\n        timestamp: form.timestamp,\n        duration: calculateDuration,\n        calories: form.calories,\n        description: form.description\n      },\n      withCredentials: true,\n      url: \"http://localhost:4000/users/me/records\"\n    }).then(res => {\n      console.log(res);\n      setForm({\n        activityName: '',\n        timestamp: '',\n        hr: 0,\n        mn: 0,\n        calories: 0,\n        description: ''\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box-right\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainActivityPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"duration\",\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          seconds: seconds,\n          setIsActive: setIsActive,\n          isActive: isActive,\n          setSeconds: setSeconds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divTree\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./Images/arrow-left-color.png\",\n              className: \"s-select left-arrow\",\n              onClick: previous,\n              alt: \"left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: ACITIVITIES_TYPE[slideAct].actSrc,\n              alt: \"no internet\",\n              className: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./Images/arrow-right-color.png\",\n              className: \"s-select right-arrow\",\n              onClick: next,\n              alt: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-record\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: Finish,\n              children: \"RECORD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activityForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Activity \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"typeInput\",\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-actType\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Activity\\xA0\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: form.activityName,\n                name: \"activityName\",\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-date\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Date\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: form.timestamp,\n                name: \"date\",\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                id: \"duration\",\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 71\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: form.hr,\n                name: \"hr\",\n                onChange: handleChange,\n                min: 0,\n                max: 24,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\xA0Hour\\xA0\\xA0\\xA0\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: form.mn,\n                name: \"mn\",\n                onChange: handleChange,\n                min: 0,\n                max: 59,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\xA0Minute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Calories\\xA0\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: form.calories,\n                name: \"calories\",\n                onChange: handleChange,\n                min: 0,\n                max: 9999\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\xA0\\xA0calorie(s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 63\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"description\",\n                cols: \"20\",\n                rows: \"3\",\n                value: form.description,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: record,\n              className: \"button\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Activity, \"1z3ewU02A59G0H/GzmaepU8eRS0=\");\n\n_c = Activity;\nexport default Activity;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activity\");","map":{"version":3,"sources":["/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Activity/Activity.js"],"names":["React","useState","useEffect","Timer","axios","faRandom","Activity","ACITIVITIES_TYPE","label","actSrc","slideAct","setSlideAct","seconds","setSeconds","isActive","setIsActive","form","setForm","activityName","timestamp","hr","mn","calories","description","handleChange","event","name","value","type","target","prevFormData","next","length","nextSide","previous","interval","setInterval","clearInterval","Finish","hrTimer","Math","floor","mnTimer","todayDate","Date","convertdate","date","arrayDate","toLocaleDateString","split","sufferDate","join","newDate","console","log","calculateDuration","handleSubmit","preventDefault","record","method","data","duration","withCredentials","url","then","res"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './Activity.css'\nimport Timer from '../Timer/Timer'\nimport axios from 'axios';\nimport { faRandom } from '@fortawesome/free-solid-svg-icons';\n// import { application } from 'express'\n\n\nfunction Activity() {\n    const ACITIVITIES_TYPE = [\n        { label: 'Running', actSrc: '../../Images/Activity-Pictures/running.png' },\n        { label: 'Badminton', actSrc: '../../Images/Activity-Pictures/badminton.png' },\n        { label: 'Bike', actSrc: '../../Images/Activity-Pictures/bike.png' },\n        { label: 'Jumping', actSrc: '../../Images/Activity-Pictures/jump.png' },\n        { label: 'Swimming', actSrc: '../../Images/Activity-Pictures/swimming.png' },\n        { label: 'Walking', actSrc: '../../Images/Activity-Pictures/walk.png' },\n        { label: 'Weight', actSrc: '../../Images/Activity-Pictures/Weight.png' },\n    ]\n\n    const [slideAct, setSlideAct] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n    const [isActive, setIsActive] = useState(false);\n    const [form, setForm] = useState({\n        activityName: '',\n        timestamp: '',\n        hr: 0,\n        mn: 0,\n        calories: 0,\n        description: ''\n    })\n\n    function handleChange(event) {\n        const { name, value, type } = event.target\n        setForm(prevFormData => ({\n            ...prevFormData,\n            [name]: value\n        }))\n    }\n\n    function next() {\n        if (slideAct === (ACITIVITIES_TYPE.length - 1)) {\n            setSlideAct(0)\n        } else {\n            const nextSide = slideAct + 1\n            setSlideAct(nextSide)\n        }\n    }\n\n    function previous() {\n        if (slideAct === 0) {\n            setSlideAct(ACITIVITIES_TYPE.length - 1)\n        } else {\n            const nextSide = slideAct - 1\n            setSlideAct(nextSide)\n        }\n    }\n\n    useEffect(() => {\n        let interval = null;\n        if (isActive) {\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n            }, 1000);\n        } else if (!isActive && seconds !== 0) {\n            clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n    }, [isActive, seconds]);\n\n    function Finish() {\n        const hrTimer = Math.floor(seconds / 3600);\n        const mnTimer = (Math.floor(seconds / 60)) % 60;\n        const todayDate = new Date()\n        const convertdate = (date) => {\n            const arrayDate = todayDate.toLocaleDateString().split('/')\n            const sufferDate = [arrayDate[2],\n            (arrayDate[0] < 10 ? '0' : '') + arrayDate[0],\n            (arrayDate[1] < 10 ? '0' : '') + arrayDate[1],]\n            return sufferDate.join('-')\n        }\n        const newDate = convertdate(todayDate)\n        console.log(newDate)\n        setForm({\n            ...form,\n            activityName: ACITIVITIES_TYPE[slideAct].label,\n            timestamp: newDate\n        });\n        setSeconds(0)\n        setIsActive(false)\n    }\n\n    const calculateDuration = `{form.hr} + {form.mn}`\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        console.log(form)\n    }\n\n    function record(event) {\n        axios({\n            method: 'POST',\n            data: {\n                activityName: form.activityName,\n                timestamp: form.timestamp,\n                duration: calculateDuration,\n                calories: form.calories,\n                description: form.description,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/users/me/records\",\n        }).then((res) => {\n            console.log(res);\n            setForm({\n                activityName: '',\n                timestamp: '',\n                hr: 0,\n                mn: 0,\n                calories: 0,\n                description: ''\n            })\n        })\n    }\n\n    return (\n        <div className='box-right'>\n\n            <div className=\"mainActivityPage\">\n                <div className='duration'>\n                    <Timer seconds={seconds} setIsActive={setIsActive} isActive={isActive} setSeconds={setSeconds} />\n                    <div className='divTree'>\n\n                        <section className='slider'>\n                            <img src='./Images/arrow-left-color.png' className='s-select left-arrow' onClick={previous} alt='left' />\n                            <img src={ACITIVITIES_TYPE[slideAct].actSrc} alt='no internet' className='image' />\n                            <img src='./Images/arrow-right-color.png' className='s-select right-arrow' onClick={next} alt='right' />\n                        </section>\n\n                        <div className='button-record'>\n                            <button className='button' onClick={Finish}>\n                                RECORD\n                            </button>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className='activityForm'>\n                    <h2>Your Activity </h2>\n                    <form className='typeInput' onSubmit={handleSubmit}>\n                        <div>\n                            <div className='form-actType'>\n                                <label>Activity&nbsp;&nbsp;</label>\n                                <input type=\"text\" value={form.activityName} name=\"activityName\" onChange={handleChange} required />\n                            </div>\n\n                            <div className='form-date'>\n                                <label>Date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                                <input type=\"date\" value={form.timestamp} name=\"date\" onChange={handleChange} required />\n                            </div>\n                            <br />\n\n                            <div>\n                                <label id='duration'>Duration</label> <br />\n                                <input type=\"number\" value={form.hr} name=\"hr\" onChange={handleChange} min={0} max={24} required></input>\n                                <label>&nbsp;Hour&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                                <input type=\"number\" value={form.mn} name=\"mn\" onChange={handleChange} min={0} max={59} required></input>\n                                <label>&nbsp;Minute</label>\n                            </div>\n\n                            <div>\n                                <label>Calories&nbsp;&nbsp;</label>\n                                <input type=\"number\" value={form.calories} name=\"calories\" onChange={handleChange} min={0} max={9999} />\n                                <label>&nbsp;&nbsp;calorie(s)</label>\n                            </div>\n\n                            <div>\n                                <label >Description: </label> <br />\n                                <textarea name=\"description\" cols=\"20\" rows=\"3\" value={form.description} onChange={handleChange}></textarea>\n                            </div>\n\n                            <button type=\"submit\" onClick={record} className=\"button\">Submit</button>\n\n                        </div>\n\n                    </form>\n                </div>\n\n            </div>\n\n        </div >\n    )\n}\nexport default Activity;"]},"metadata":{},"sourceType":"module"}