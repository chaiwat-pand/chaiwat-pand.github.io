[{"/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/index.js":"1","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/App.js":"2","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Home/Home.js":"3","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Login/Login.js":"4","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Profile/Profile.js":"5","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Activity/Activity.js":"6","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/DataProfile/Goal.js":"7","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/DataProfile/RecordActivity.js":"8","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Timer/Timer.js":"9","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/SignUp/Signup.js":"10","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/DataProfile/Modal/Modal.js":"11","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/DataProfile/ListRecords/ListRecords.js":"12","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Navbar/Navbar.js":"13"},{"size":245,"mtime":1649861276986,"results":"14","hashOfConfig":"15"},{"size":580,"mtime":1650533775026,"results":"16","hashOfConfig":"15"},{"size":417,"mtime":1650215004168,"results":"17","hashOfConfig":"15"},{"size":3927,"mtime":1650533842115,"results":"18","hashOfConfig":"15"},{"size":4768,"mtime":1650533944350,"results":"19","hashOfConfig":"15"},{"size":7265,"mtime":1650443369298,"results":"20","hashOfConfig":"15"},{"size":846,"mtime":1649875208114,"results":"21","hashOfConfig":"15"},{"size":2574,"mtime":1650387898687,"results":"22","hashOfConfig":"15"},{"size":1009,"mtime":1650513201083,"results":"23","hashOfConfig":"15"},{"size":8151,"mtime":1650256424799,"results":"24","hashOfConfig":"15"},{"size":4437,"mtime":1650448628347,"results":"25","hashOfConfig":"15"},{"size":1308,"mtime":1650389985395,"results":"26","hashOfConfig":"15"},{"size":700,"mtime":1650443096481,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1kf3gde",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},"/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/index.js",[],["63","64"],"/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/App.js",[],"/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Home/Home.js",[],"/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Login/Login.js",["65","66"],"import axios from 'axios';\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'\n// import AuthContext from './context/AuthProvider';\n\nfunction Login() {\n    // const { setAuth } = useContext(AuthContext);\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const [signInData, setSignInData] = useState({\n        username: '',\n        password: ''\n    })\n\n    let navigate = useNavigate()\n\n    // const [user, setUser] = useState('');\n    // const [pwd, setPwd] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [signInData.username, signInData.password])\n\n    function handleChange(event) {\n        const { name, value, type } = event.target\n        setSignInData(prevFormData => ({\n            ...prevFormData,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(signInData);\n        // setUser('');\n        // setPwd('');\n        // setSuccess(true);\n        axios({\n            method: 'POST',\n            data: {\n                username: signInData.username,\n                password: signInData.password,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/users/login\",\n        }).then((res) => {\n            console.log(res.data);\n            if (res.data === 'Successfully Authenticated') {\n                setSuccess(true);\n                navigate('/home')\n            }\n        })\n    }\n\n    return (\n        <div className='registrationForm'>\n            {success ? (\n                <section>\n                    <h1>You are logged in!</h1>\n                    <br />\n                    <p>\n                        {/* <a href=''>Go to Home</a>  */}\n                        <Link to=\"/\">Go to Home</Link>\n                    </p>\n                </section>\n            ) :\n                (\n                    <section className='section-registration'>\n                        <p ref={errRef} className={errMsg ? 'errMsg' : 'offscreen'}\n                            aria-live='assertive'>{errMsg}</p>\n                        <h1 className='signIn' ><b>SIGN-IN</b></h1>\n                        <form onSubmit={handleSubmit} className='form-registration'>\n                            <label htmlFor='username'>Username:</label>\n                            <input\n                                type='text'\n                                id='username'\n                                ref={userRef}\n                                autoComplete='off'\n                                onChange={handleChange}\n                                value={signInData.username}\n                                name='username'\n                                required\n                            />\n                            <label htmlFor='password'>Password:</label>\n                            <input\n                                type='password'\n                                id='password'\n                                onChange={handleChange}\n                                value={signInData.password}\n                                name='password'\n                                required\n                            />\n                            <button>Sign In</button>\n                        </form>\n\n                        <p>\n                            Need an Account?<br />\n                            <span>\n                                {/* <a href='#'>Sign Up</a> */}\n                                <Link to=\"/register\">Sign Up</Link>\n                            </span>\n                        </p>\n                    </section>\n                )\n            }\n\n        </div>\n    )\n}\n\nexport default Login","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Profile/Profile.js",["67","68","69","70"],"import React, { useEffect, useState } from 'react'\nimport '../EditProfile/EditProfile.css'\nimport '../DataProfile/DataProfile.css'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\n\nfunction Profile() {\n    const [toEditUserInfo, setToEditUserInfo] = useState(false)\n\n    const [profileData, setProfileData] = useState({\n        displayName: '',\n        aboutMe: '',\n        favorite: '',\n        caloriesGoal: '',\n        durationGoal: ''\n    })\n\n    const [data, setData] = useState(null)\n\n    function handleChange(event) {\n        const { name, value, type } = event.target\n        setProfileData(prevFormData => ({\n            ...prevFormData,\n            [name]: value\n        }))\n    }\n\n    function handleEditUserInfo(event) {\n        setToEditUserInfo(prevState => !prevState)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        console.log(profileData)\n    }\n\n    function editProfileAPI() {\n        axios({\n            method: 'PUT',\n            data: {\n                favorite: profileData.favorite,\n                aboutMe: profileData.aboutMe,\n                displayName: profileData.displayName,\n                // durationGoal: profileData.durationGoal,\n                // caloriesGoal: profileData.caloriesGoal,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/users/edit\",\n        }).then((res) => {\n            console.log(res)\n        })\n    }\n\n    const editProfileData = () => {\n        editProfileAPI();\n    };\n\n    let navigate = useNavigate()\n    function logOut() {\n        console.log(profileData)\n        axios({\n            method: \"DELETE\",\n            withCredentials: true,\n            url: \"http://localhost:4000/users/logout\",\n        }).then((res) => {\n            console.log(res)\n        });\n        navigate('/login')\n    }\n\n    useEffect(() => {\n        let isMounted = true;\n        axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: \"http://localhost:4000/users/me\",\n        }).then((res) => {\n            setProfileData(res.data)\n        })\n    }, [data])\n\n    return (\n        <div className='profile'>\n            <div>\n                <img src='../../Images/PROFILE.png' alt='profile-pic' className='pro-pic' />\n            </div>\n\n            {toEditUserInfo ?\n                <form onSubmit={handleSubmit}>\n                    <div className='data-profile-edit'>\n\n                        <input\n                            type='text'\n                            className='editProfileUserName'\n                            placeholder='Profile Name'\n                            name='displayName'\n                            value={profileData.displayName}\n                            onChange={handleChange}\n                            autoComplete=\"off\"\n                        />\n\n                        <div className='data-profile-user'>\n                            <textarea\n                                type='text'\n                                className='editProfile'\n                                placeholder='Fun Fact'\n                                name='aboutMe'\n                                value={profileData.aboutMe}\n                                onChange={handleChange}\n                            />\n                        </div>\n\n                        <div className='data-profile-user'>\n                            <textarea\n                                type='text'\n                                className='editProfile'\n                                placeholder='Favorite Sport'\n                                name='favorite'\n                                value={profileData.favorite}\n                                onChange={handleChange}\n                            />\n                        </div>\n\n                    </div>\n                    <button className='edit-profile' onClick={editProfileAPI}>Save</button>\n                </form>\n                :\n                <div className=\"data-profile\">\n\n                    {profileData.displayName}\n\n                    <div className=\"data-profile-user\">\n                        {profileData.aboutMe}\n                        <br />\n\n                    </div>\n\n                    <div className=\"data-profile-user\">\n                        {profileData.favorite}\n                        <br />\n\n                    </div>\n\n                </div>}\n\n            <button type=\"button\" className=\"edit-profile\" onClick={handleEditUserInfo}>\n                {toEditUserInfo ? 'Done' : 'Edit'}\n            </button>\n\n            <button type=\"button\" onClick={logOut} className=\"edit-profile\">\n                Logout\n            </button>\n\n        </div>\n    )\n\n}\n\nexport default Profile;","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Activity/Activity.js",["71","72","73","74"],"import React, { useState, useEffect } from 'react'\nimport './Activity.css'\nimport Timer from '../Timer/Timer'\nimport axios from 'axios';\nimport { faRandom } from '@fortawesome/free-solid-svg-icons';\n\nimport running from '../../Images/running.png'\nimport swimming from '../../Images/swimming.png'\nimport walking from '../../Images/walk.png'\nimport weight from '../../Images/weight.png'\nimport biking from '../../Images/bike.png'\nimport batminton from '../../Images/batminton.png'\nimport jumping from '../../Images/jump.png'\n\nfunction Activity() {\n    const ACITIVITIES_TYPE = [\n        { label: 'Running', actSrc: running },\n        { label: 'Batminton', actSrc: batminton },\n        { label: 'Bike', actSrc: biking },\n        { label: 'Jumping', actSrc: jumping },\n        { label: 'Swimming', actSrc: swimming },\n        { label: 'Walking', actSrc: walking },\n        { label: 'Weight', actSrc: weight },\n    ]\n\n    const [slideAct, setSlideAct] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n    const [isActive, setIsActive] = useState(false);\n    const [form, setForm] = useState({\n        activityName: '',\n        timestamp: '',\n        hr: 0,\n        mn: 0,\n        calories: 0,\n        description: '',\n        duration: 0,\n    })\n\n    function handleChange(event) {\n        const { name, value, type } = event.target\n        setForm(prevFormData => ({\n            ...prevFormData,\n            [name]: value\n        }))\n    }\n\n    function next() {\n        if (slideAct === (ACITIVITIES_TYPE.length - 1)) {\n            setSlideAct(0)\n        } else {\n            const nextSide = slideAct + 1\n            setSlideAct(nextSide)\n        }\n    }\n\n    function previous() {\n        if (slideAct === 0) {\n            setSlideAct(ACITIVITIES_TYPE.length - 1)\n        } else {\n            const nextSide = slideAct - 1\n            setSlideAct(nextSide)\n        }\n    }\n\n    useEffect(() => {\n        let interval = null;\n        if (isActive) {\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n            }, 1000);\n        } else if (!isActive && seconds !== 0) {\n            clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n    }, [isActive, seconds]);\n\n    function Finish() {\n        const hrTimer = Math.floor(seconds / 3600);\n        const mnTimer = (Math.floor(seconds / 60)) % 60;\n        const todayDate = new Date()\n        const convertdate = (date) => {\n            const arrayDate = todayDate.toLocaleDateString().split('/')\n            const sufferDate = [arrayDate[2],\n            (arrayDate[0] < 10 ? '0' : '') + arrayDate[0],\n            (arrayDate[1] < 10 ? '0' : '') + arrayDate[1],]\n            return sufferDate.join('-')\n        }\n        const newDate = convertdate(todayDate)\n        console.log(newDate)\n        setForm({\n            ...form,\n            activityName: ACITIVITIES_TYPE[slideAct].label,\n            timestamp: newDate\n        });\n        setSeconds(0)\n        setIsActive(false)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        console.log(form)\n    }\n\n    function record(event) {\n        form.duration = Number(form.hr * 60) + Number(form.mn)\n        axios({\n            method: 'POST',\n            data: {\n                activityName: form.activityName,\n                timestamp: form.timestamp,\n                duration: form.duration,\n                calories: form.calories,\n                description: form.description,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/users/me/records\",\n        }).then((res) => {\n            console.log(res);\n            setForm({\n                activityName: '',\n                timestamp: '',\n                hr: 0,\n                mn: 0,\n                calories: 0,\n                description: '',\n                duration: 0\n            })\n        })\n    }\n\n    return (\n        <div className='box-right'>\n\n            <div className=\"mainActivityPage\">\n                <div className='duration'>\n                    <Timer seconds={seconds} setIsActive={setIsActive} isActive={isActive} setSeconds={setSeconds} />\n                    <div className='divTree'>\n\n                        <section className='slider'>\n                            <img src='../../Images/arrow-left-color.png' className='s-select left-arrow' onClick={previous} alt='left' />\n                            <img src={ACITIVITIES_TYPE[slideAct].actSrc} alt='no internet' className='image' />\n                            <img src='../../Images/arrow-right-color.png' className='s-select right-arrow' onClick={next} alt='right' />\n                        </section>\n\n                        <div className='button-record'>\n                            <button className='button' onClick={Finish}>\n                                RECORD\n                            </button>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className='activityForm'>\n                    <h2>Your Activity </h2>\n                    <form className='typeInput' onSubmit={handleSubmit}>\n                        <div>\n                            <div className='form-actType'>\n                                <label>Activity&nbsp;&nbsp;</label>\n                                <input type=\"text\" value={form.activityName} name=\"activityName\" onChange={handleChange} required />\n                            </div>\n\n                            <div className='form-date'>\n                                <label>Date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                                <input type=\"date\" value={form.timestamp} name=\"date\" onChange={handleChange} required />\n                            </div>\n                            <br />\n\n                            <div>\n                                <label id='duration'>Duration</label> <br />\n                                <input type=\"number\" value={form.hr} name=\"hr\" onChange={handleChange} min={0} max={24} required></input>\n                                <label>&nbsp;Hour&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                                <input type=\"number\" value={form.mn} name=\"mn\" onChange={handleChange} min={0} max={59} required></input>\n                                <label>&nbsp;Minute</label>\n                            </div>\n\n                            <div>\n                                <label>Burnt&nbsp;&nbsp;</label>\n                                <input type=\"number\" value={form.calories} name=\"calories\" onChange={handleChange} min={0} max={9999} />\n                                <label>&nbsp;&nbsp;Calorie(s)</label>\n                            </div>\n\n                            <div>\n                                <label >Description: </label> <br />\n                                <textarea name=\"description\" cols=\"20\" rows=\"3\" value={form.description} onChange={handleChange}></textarea>\n                            </div>\n\n                            <button type=\"submit\" onClick={record} className=\"button\">Submit</button>\n\n                        </div>\n\n                    </form>\n                </div>\n\n            </div>\n\n        </div >\n    )\n}\nexport default Activity;","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/DataProfile/Goal.js",[],["75","76"],"/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/DataProfile/RecordActivity.js",["77"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './Record.css'\n\nimport ListRecord from './ListRecords/ListRecords'\nimport Modal from './Modal/Modal';\n\nfunction Record(props) {\n\n  const [formRecords, setFormRecords] = useState([]);\n  const [modalEditOpen, setModalEditOpen] = useState(false);\n  const [modelID, setModelID] = useState();\n  // const setLogged = props.setIsLogin;\n\n  useEffect(() => {\n    let isMounted = true;\n    axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:4000/users/me/records\",\n    }).then((res) => {\n      if (isMounted) {\n        setFormRecords(res.data);\n        // setLogged(true)\n      };\n    });\n    return () => { isMounted = false }\n  }, [formRecords]);\n\n  const currentMin = formRecords.reduce((totalMin, record) => {\n    return totalMin + record.duration\n  }, 0);\n\n  return (\n    <div className='record-container'>\n      {modalEditOpen ? <Modal setModalEditOpen={setModalEditOpen} modelID={modelID} /> :\n        (<>\n          <div className='top-plus'>\n            {/* <div className='data-result'>\n              GOAL\n              <br />\n              {props.data && props.data.durationGoal} min\n            </div>\n            <div className='data-result'>\n              CURRENT TOTAL\n              <br />\n              {currentMin} min\n            </div> */}\n          </div>\n          <div className='data-activity'>\n            <div className='data-activity-user'>\n              <strong>DATE</strong>\n            </div>\n            <div className='data-activity-user'>\n              <strong>ACTIVITY</strong>\n            </div>\n            <div className='data-activity-user'>\n              <strong>DURATION</strong>\n            </div>\n            <div className='data-activity-user'>\n              <strong>CALORIES</strong>\n            </div>\n            <div className='data-activity-user'>\n            </div>\n          </div>\n          {formRecords.map((formRecord) =>\n            <ListRecord\n              key={formRecord._id}\n              id={formRecord._id}\n              actName={formRecord.activityName}\n              date={formRecord.timestamp}\n              duration={formRecord.duration}\n              calories={formRecord.calories}\n              description={formRecord.description}\n              //  setModalEditOpen={setModalEditOpen}\n              setModalEditOpen={setModalEditOpen}\n              modalEditOpen={modalEditOpen}\n              setModelID={setModelID}\n            />\n          )}\n        </>)}\n    </div>\n  )\n}\n\nexport default Record","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Timer/Timer.js",[],"/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/SignUp/Signup.js",["78","79"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport './Signup.css'\nimport axios from 'axios'\n// import { Navigate, Link } from \"react-router-dom\";\n\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nconst REGISTER_URL = '/register';\n\nconst Register = () => {\n    const userRef = useRef();\n    const errRef = useRef();\n\n    // let navigate = Navigate();\n\n    const [registerData, setRegisterData] = useState({\n        username: '',\n        password: '',\n        matchPassword: '',\n    })\n\n    function handleChange(event) {\n        const { name, value, type } = event.target\n        setRegisterData(prevFormData => ({\n            ...prevFormData,\n            [name]: value\n        }))\n    }\n\n\n    const [validName, setValidName] = useState(false);\n    const [userFocus, setUserFocus] = useState(false);\n\n    const [validPwd, setValidPwd] = useState(false);\n    const [pwdFocus, setPwdFocus] = useState(false);\n\n    // const [matchPwd, setMatchPwd] = useState('');\n    const [validMatch, setValidMatch] = useState(false);\n    const [matchFocus, setMatchFocus] = useState(false);\n\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setValidName(USER_REGEX.test(registerData.username));\n    }, [registerData.username])\n\n    useEffect(() => {\n        setValidPwd(PWD_REGEX.test(registerData.password));\n        setValidMatch(registerData.password === registerData.matchPassword);\n    }, [registerData.password, registerData.matchPassword])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [registerData.username, registerData.password, registerData.matchPassword])\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        console.log(registerData)\n        axios({\n            method: 'POST',\n            data: {\n                username: registerData.username,\n                password: registerData.password,\n            },\n            withCredentials: true,\n            url: 'http://localhost:4000/users/register',\n        }).then((res) => {\n            console.log(res);\n            if (res.data === 'User Created') {\n                // navigate('login')\n                setSuccess(true)\n            }\n        })\n    }\n\n    return (\n        <div className='registrationForm'>\n            {/* This will navigate to sign in page, to be editted */}\n            {success ? (\n                <section>\n                    <h1>Success!</h1>\n                    <p>\n                        {/* <a href=\"#\">Sign In</a> */}\n                        <Link to=\"/login\">Sign In</Link>\n                    </p>\n                </section>\n            ) : (\n                <section className='section-registation'>\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n                    <h1 className='register'><b>REGISTER</b></h1>\n                    <form onSubmit={handleSubmit} className='form-registration'>\n                        <label htmlFor=\"username\">\n                            Username:\n                            <FontAwesomeIcon icon={faCheck} className={validName ? \"valid\" : \"hide\"} />\n                            <FontAwesomeIcon icon={faTimes} className={validName || !registerData.username ? \"hide\" : \"invalid\"} />\n                        </label>\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            ref={userRef}\n                            autoComplete=\"off\"\n                            onChange={handleChange}\n                            value={registerData.username}\n                            name='username'\n                            required\n                            aria-invalid={validName ? \"false\" : \"true\"}\n                            aria-describedby=\"uidnote\"\n                            onFocus={() => setUserFocus(true)}\n                            onBlur={() => setUserFocus(false)}\n                        />\n                        <p id=\"uidnote\" className={userFocus && registerData.username && !validName ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            4 to 24 characters.<br />\n                            Must begin with a letter.<br />\n                            Letters, numbers, underscores, hyphens allowed.\n                        </p>\n\n\n                        <label htmlFor=\"password\">\n                            Password:\n                            <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\n                            <FontAwesomeIcon icon={faTimes} className={validPwd || !registerData.password ? \"hide\" : \"invalid\"} />\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={handleChange}\n                            value={registerData.password}\n                            name='password'\n                            required\n                            aria-invalid={validPwd ? \"false\" : \"true\"}\n                            aria-describedby=\"pwdnote\"\n                            onFocus={() => setPwdFocus(true)}\n                            onBlur={() => setPwdFocus(false)}\n                        />\n                        <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            8 to 24 characters.<br />\n                            Must include uppercase and lowercase letters, a number and a special character.<br />\n                            Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\n                        </p>\n\n\n                        <label htmlFor=\"confirm_pwd\">\n                            Confirm Password:\n                            <FontAwesomeIcon icon={faCheck} className={validMatch && registerData.matchPassword ? \"valid\" : \"hide\"} />\n                            <FontAwesomeIcon icon={faTimes} className={validMatch || !registerData.matchPassword ? \"hide\" : \"invalid\"} />\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm_pwd\"\n                            onChange={handleChange}\n                            value={registerData.matchPassword}\n                            name='matchPassword'\n                            required\n                            aria-invalid={validMatch ? \"false\" : \"true\"}\n                            aria-describedby=\"confirmnote\"\n                            onFocus={() => setMatchFocus(true)}\n                            onBlur={() => setMatchFocus(false)}\n                        />\n                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            Must match the first password input field.\n                        </p>\n\n                        <button disabled={!validName || !validPwd || !validMatch ? true : false}>Sign Up</button>\n                    </form>\n                    <p>\n                        Already registered?<br />\n                        <span className=\"line\">\n                            {/* <a href=\"#\">Sign In</a> */}\n                            <Link to=\"/login\">Sign In</Link>\n                        </span>\n                    </p>\n                </section>\n            )}\n        </div>\n    )\n}\n\nexport default Register","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/DataProfile/Modal/Modal.js",["80","81","82","83"],"import React, { useState, useEffect } from 'react'\nimport './Modal.css'\nimport { FaTimes, FaEdit, FaRegSave, FaTrashAlt } from \"react-icons/fa\";\n\nimport axios from 'axios';\n\nfunction Modal(props) {\n    const [data, setData] = useState();\n    const [canEdit, setCanEdit] = useState(false);\n    const [form, setForm] = useState({\n        actTypes: '',\n        date: '',\n        duration: 0,\n        cal: 0,\n        des: \"\"\n    });\n    const searchID = props.modelID;\n\n    const handleChange = e => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    useEffect(() => {\n        let isMounted = true;\n        axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: `http://localhost:4000/users/me/records/${searchID}`,\n        }).then((res) => {\n            if (isMounted) setData(res.data);\n        });\n        return () => { isMounted = false }\n    }, [searchID]);\n\n    async function deletePost(e) {\n        await axios({\n            method: \"DELETE\",\n            withCredentials: true,\n            url: `http://localhost:4000/users/me/records/${searchID}`,\n        });\n        props.setModalEditOpen(false)\n    };\n\n    const toEdit = () => {\n        setForm({\n            actTypes: data[0].activityName,\n            date: data[0].timestamp.slice(0, 10),\n            duration: data[0].duration,\n            cal: data[0].calories,\n            des: data[0].description\n        });\n        setCanEdit(!canEdit);\n    };\n\n    const save = () => {\n        axios({\n            method: \"PUT\",\n            data: {\n                activityName: form.actTypes,\n                timestamp: new Date(form.date),\n                duration: parseInt(form.duration),\n                calories: parseInt(form.cal),\n                description: form.des,\n            },\n            withCredentials: true,\n            url: `http://localhost:4000/users/me/records/${searchID}`,\n        }).then((res) => {\n            // console.log(res);\n        });\n        // setCanEdit(!canEdit);\n        props.setModalEditOpen(false)\n    };\n\n    return (\n        <div className='model-container'>\n            <div className='model-content'>\n                <strong>Your Record</strong>\n                <br />\n                <br />\n                Activity Name:{data && (canEdit ?\n                    <input type='text' placeholder='Enter Your Activity Name'\n                        name=\"actTypes\" value={form.actTypes}\n                        onChange={handleChange} />\n                    : <div>{data[0].activityName}</div>)}\n                <br />\n                Date:{data && (canEdit ?\n                    <input type='date' placeholder='Enter Date'\n                        name=\"date\" value={form.date}\n                        onChange={handleChange} />\n                    : <div>{data[0].timestamp.slice(0, 10)}</div>)}\n                <br />\n                duration:{data && (canEdit ?\n                    <input type='number' placeholder='Enter your activity duration'\n                        name=\"duration\" value={form.duration}\n                        onChange={handleChange} />\n                    : <div>{data[0].duration} min</div>)}\n                <br />\n                Calories:{data && (canEdit ?\n                    <input type='number' placeholder='Enter your activity calories'\n                        name=\"cal\" value={form.cal}\n                        onChange={handleChange} />\n                    : <div>{data[0].calories} cal</div>)}\n                <br />\n                Description:{data && (canEdit ?\n                    <input type='text' placeholder='Enter your activity description'\n                        name=\"des\" value={form.des}\n                        onChange={handleChange} />\n                    : <div>{data[0].description}</div>)}\n                <br />\n                <div className='model-content-btn'>\n                    {canEdit ?\n                        <button className='iconModal' onClick={save}>Save</button>\n                        : <button className='iconModal modal-button' onClick={toEdit}>Edit</button>}\n                    <button className='iconModal modal-button' onClick={deletePost}>Delete</button>\n                    <button className=\"iconModal modal-button\" onClick={() => props.setModalEditOpen(false)}>Go Back</button>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Modal;","/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/DataProfile/ListRecords/ListRecords.js",[],"/Users/chaiwatpandey/Desktop/FITNESSEXPERT2/Activity-App/src/Components/Navbar/Navbar.js",["84"],"import React from 'react'\nimport './Navbar.css'\nimport logo from '../../Images/FE-logo.jpg'\n\n\nfunction Navbar() {\n\n    return (\n        <nav className=\"nav-design-template\">\n            <div className=\"nav-design-left\">\n                <div className=\"nav-design-left-row-one\">\n                    <img className=\"nav-design-image\" src={logo} />\n                    <h1>FitnessTracker</h1>\n                </div>\n                <h4>Improve your Fitness, Improve your Life</h4>\n            </div>\n\n            {/* <div className=\"nav-design-right\"> */}\n            <p className=\"nav-design-right\">Created by Chaiwat Pandey</p>\n            {/* </div> */}\n        </nav>\n    )\n}\n\nexport default Navbar;",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":46,"nodeType":"91","messageId":"92","endLine":2,"endColumn":56},{"ruleId":"89","severity":1,"message":"93","line":32,"column":30,"nodeType":"91","messageId":"92","endLine":32,"endColumn":34},{"ruleId":"89","severity":1,"message":"94","line":18,"column":18,"nodeType":"91","messageId":"92","endLine":18,"endColumn":25},{"ruleId":"89","severity":1,"message":"93","line":21,"column":30,"nodeType":"91","messageId":"92","endLine":21,"endColumn":34},{"ruleId":"89","severity":1,"message":"95","line":54,"column":11,"nodeType":"91","messageId":"92","endLine":54,"endColumn":26},{"ruleId":"89","severity":1,"message":"96","line":72,"column":13,"nodeType":"91","messageId":"92","endLine":72,"endColumn":22},{"ruleId":"89","severity":1,"message":"97","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":18},{"ruleId":"89","severity":1,"message":"93","line":40,"column":30,"nodeType":"91","messageId":"92","endLine":40,"endColumn":34},{"ruleId":"89","severity":1,"message":"98","line":78,"column":15,"nodeType":"91","messageId":"92","endLine":78,"endColumn":22},{"ruleId":"89","severity":1,"message":"99","line":79,"column":15,"nodeType":"91","messageId":"92","endLine":79,"endColumn":22},{"ruleId":"85","replacedBy":"100"},{"ruleId":"87","replacedBy":"101"},{"ruleId":"89","severity":1,"message":"102","line":30,"column":9,"nodeType":"91","messageId":"92","endLine":30,"endColumn":19},{"ruleId":"89","severity":1,"message":"103","line":11,"column":7,"nodeType":"91","messageId":"92","endLine":11,"endColumn":19},{"ruleId":"89","severity":1,"message":"93","line":26,"column":30,"nodeType":"91","messageId":"92","endLine":26,"endColumn":34},{"ruleId":"89","severity":1,"message":"104","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":17},{"ruleId":"89","severity":1,"message":"105","line":3,"column":19,"nodeType":"91","messageId":"92","endLine":3,"endColumn":25},{"ruleId":"89","severity":1,"message":"106","line":3,"column":27,"nodeType":"91","messageId":"92","endLine":3,"endColumn":36},{"ruleId":"89","severity":1,"message":"107","line":3,"column":38,"nodeType":"91","messageId":"92","endLine":3,"endColumn":48},{"ruleId":"108","severity":1,"message":"109","line":12,"column":21,"nodeType":"110","endLine":12,"endColumn":68},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'type' is assigned a value but never used.","'setData' is assigned a value but never used.","'editProfileData' is assigned a value but never used.","'isMounted' is assigned a value but never used.","'faRandom' is defined but never used.","'hrTimer' is assigned a value but never used.","'mnTimer' is assigned a value but never used.",["111"],["112"],"'currentMin' is assigned a value but never used.","'REGISTER_URL' is assigned a value but never used.","'FaTimes' is defined but never used.","'FaEdit' is defined but never used.","'FaRegSave' is defined but never used.","'FaTrashAlt' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]